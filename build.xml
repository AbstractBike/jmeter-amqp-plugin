<?xml version="1.0"?>
<project name="JMeter-AMQP" default="package" basedir=".">
  <description>

    To build JMeter-AMQP from source:
      ant 

    To rebuild:
      ant clean install

    For more info:
      ant -projecthelp

    To diagnose usage of deprecated APIs:
  </description>


  <property name="src.dir" value="src/main"/>
  <property name="test.src.dir" value="src/test"/>

  <property name="build.dir" value="target/classes"/>
  <property name="test.build.dir" value="target/test-classes"/>
  <property name="dest.dir" value="target/dist"/>
  <property name="lib.dir" value="lib"/>

  <!-- Compilation parameters -->
  <property name="optimize" value="on"/>
  <property name="deprecation" value="off"/>
  <property name="target.java.version" value="1.5"/>
  <property name="src.java.version" value="1.5"/>
  <property name="encoding" value="UTF-8"/>
  <!-- Set test encoding to the same default, but allow override -->
  <property name="test.encoding" value="${encoding}"/>  
  <property name="includeAntRuntime" value="false"/>

  <target name="compile"  description="Compile.">
    <mkdir dir="${build.dir}"/>
    <javac srcdir="${src.dir}" destdir="${build.dir}" optimize="${optimize}" source="${src.java.version}" debug="on" target="${target.java.version}" includeAntRuntime="${includeAntRuntime}" deprecation="${deprecation}" encoding="${encoding}">
      <include name="**/*.java"/>
      <include name="**/*.properties"/>
      <classpath>
        <pathelement path="${classpath}"/>
        <fileset dir="${lib.dir}">
          <include name="**/*.jar"/>
        </fileset>
        <pathelement location="classes"/>
        <dirset dir="${build.dir}">
          <include name="**/classes"/>
        </dirset>
      </classpath>

    </javac>
  </target>


  <target name="compile-tests" description="Compile test components only">
    <mkdir dir="${test.build.dir}"/>
    <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" source="${src.java.version}" optimize="${optimize}" debug="on" target="${target.java.version}" includeAntRuntime="${includeAntRuntime}" deprecation="${deprecation}" encoding="${encoding}">
      <classpath>
        <pathelement location="${build.dir}"/>
        <!-- Also include compiled jars to allow running tests without rebuilding source -->
        <fileset dir="${dest.dir}" includes="*.jar"/>
        <path refid="classpath"/>
      </classpath>
    </javac>
  </target>

  <target name="package" depends="compile"
     description="Compile everything and create the jars">

    <mkdir dir="${dest.dir}"/>

    <jar jarfile="${dest.dir}/JMeterAMQP.jar"
        basedir="${build.dir}">
      <fileset dir="${build.dir}" includes="**/*.class" />
      <fileset dir="${src.dir}" includes="**/*.properties" />
    </jar>
  </target>

  <!-- Check the Ant version -->
  <available property="Ant-1.8.0-or-later" classname="org.apache.tools.ant.taskdefs.Local"/>
  <fail message="This build requires Ant 1.8.0 or later" unless="Ant-1.8.0-or-later"/>

  <target name="clean" description="Clean up to force a build from source.">
    <delete quiet="true">
        <fileset dir="${dest.dir}" includes="*.jar"/>
        <fileset dir="${build.dir}"/>
    </delete>
  </target>

</project>
